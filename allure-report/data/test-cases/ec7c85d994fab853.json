{"uid":"ec7c85d994fab853","name":"test_create_order_store_2__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None_","fullName":"TestOrder.TestOrder#test_create_order_store_2__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None_","historyId":"8428fc3a6be4d73a088d90585acde527","time":{"start":1682589986534,"stop":1682589991517,"duration":4983},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=112.0.5615.138)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x0095DCE3+50899]\n\t(No symbol) [0x008EE111]\n\t(No symbol) [0x007F5588]\n\t(No symbol) [0x007DD333]\n\t(No symbol) [0x0083F4DB]\n\t(No symbol) [0x0084DB33]\n\t(No symbol) [0x0083B6F6]\n\t(No symbol) [0x00817708]\n\t(No symbol) [0x0081886D]\n\tGetHandleVerifier [0x00BC3EAE+2566302]\n\tGetHandleVerifier [0x00BF92B1+2784417]\n\tGetHandleVerifier [0x00BF327C+2759788]\n\tGetHandleVerifier [0x009F5740+672048]\n\t(No symbol) [0x008F8872]\n\t(No symbol) [0x008F41C8]\n\t(No symbol) [0x008F42AB]\n\t(No symbol) [0x008E71B7]\n\tBaseThreadInitThunk [0x76B77D49+25]\n\tRtlInitializeExceptionChain [0x77A5B74B+107]\n\tRtlClearBits [0x77A5B6CF+191]","statusTrace":"self = <TestsCases.TestOrder.TestOrder testMethod=test_create_order_store_2__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None_>\nusername = None, password = None, productname = None, leatherProfile = None\nleatherSize = None, hardware = None, lining = None, polyfill = None, size = None\nbodytype = None, length = None, chest = None, waist = None, hips = None\nshoulder = None, sleeves = None, arms = None, weight = None, front = None\narmhole = None, remarks = None, price = None, discount = None, OTP = None\n\n    @allure.story(\"Create a New Order for store  \")\n    @allure.severity(allure.severity_level.NORMAL)\n    @data(*Utils.read_xlsx(\"../TestData/OrderTestData/orderTestCase.xlsx\", \"forStore\"))\n    @unpack\n    def test_create_order_store(self, username, password, productname, leatherProfile, leatherSize,\thardware, lining, polyfill,\n                                size, bodytype, length,\tchest, waist, hips, shoulder, sleeves, arms, weight, front, armhole,\n                                remarks, price, discount, OTP):\n        self.LoginMethod.nativelogin(self.driver, username, password)\n        try:\n            self.assertEqual(\n>               self.Order.createOrder_Store(productname, leatherProfile, leatherSize,\thardware, lining, polyfill,\n                                             size, bodytype, length, chest, waist, hips, shoulder, sleeves, arms, weight, front, armhole,\n                                             remarks, price, discount, OTP),\n                \"Order Succesfully Created\", msg=\"Verification Failed to Create a new user.\")\n\nTestOrder.py:110: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\executions\\OrdersExecutions\\OrderMethods.py:221: in createOrder_Store\n    self.navigateToOrder()\n..\\executions\\OrdersExecutions\\OrderMethods.py:64: in navigateToOrder\n    self.order.clickOnOrderTab()\n..\\Pages\\Order\\OrderPage.py:56: in clickOnOrderTab\n    self.wait.until(EC.element_to_be_clickable(self.OrderTab)).click()\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:86: in until\n    value = method(self._driver)\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:334: in _predicate\n    target = driver.find_element(*target)  # grab element at locator\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000266A82D7AF0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...dInitThunk [0x76B77D49+25]\\\\n\\\\tRtlInitializeExceptionChain [0x77A5B74B+107]\\\\n\\\\tRtlClearBits [0x77A5B6CF+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=112.0.5615.138)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x0095DCE3+50899]\nE       \t(No symbol) [0x008EE111]\nE       \t(No symbol) [0x007F5588]\nE       \t(No symbol) [0x007DD333]\nE       \t(No symbol) [0x0083F4DB]\nE       \t(No symbol) [0x0084DB33]\nE       \t(No symbol) [0x0083B6F6]\nE       \t(No symbol) [0x00817708]\nE       \t(No symbol) [0x0081886D]\nE       \tGetHandleVerifier [0x00BC3EAE+2566302]\nE       \tGetHandleVerifier [0x00BF92B1+2784417]\nE       \tGetHandleVerifier [0x00BF327C+2759788]\nE       \tGetHandleVerifier [0x009F5740+672048]\nE       \t(No symbol) [0x008F8872]\nE       \t(No symbol) [0x008F41C8]\nE       \t(No symbol) [0x008F42AB]\nE       \t(No symbol) [0x008E71B7]\nE       \tBaseThreadInitThunk [0x76B77D49+25]\nE       \tRtlInitializeExceptionChain [0x77A5B74B+107]\nE       \tRtlClearBits [0x77A5B6CF+191]\n\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: NoSuchWindowException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=112.0.5615.138)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x0095DCE3+50899]\n\t(No symbol) [0x008EE111]\n\t(No symbol) [0x007F5588]\n\t(No symbol) [0x007DD333]\n\t(No symbol) [0x0083F4DB]\n\t(No symbol) [0x0084DB33]\n\t(No symbol) [0x0083B6F6]\n\t(No symbol) [0x00817708]\n\t(No symbol) [0x0081886D]\n\tGetHandleVerifier [0x00BC3EAE+2566302]\n\tGetHandleVerifier [0x00BF92B1+2784417]\n\tGetHandleVerifier [0x00BF327C+2759788]\n\tGetHandleVerifier [0x009F5740+672048]\n\t(No symbol) [0x008F8872]\n\t(No symbol) [0x008F41C8]\n\t(No symbol) [0x008F42AB]\n\t(No symbol) [0x008E71B7]\n\tBaseThreadInitThunk [0x76B77D49+25]\n\tRtlInitializeExceptionChain [0x77A5B74B+107]\n\tRtlClearBits [0x77A5B6CF+191]","statusTrace":"self = <TestsCases.TestOrder.TestOrder testMethod=test_create_order_store_2__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None__None_>\nusername = None, password = None, productname = None, leatherProfile = None\nleatherSize = None, hardware = None, lining = None, polyfill = None, size = None\nbodytype = None, length = None, chest = None, waist = None, hips = None\nshoulder = None, sleeves = None, arms = None, weight = None, front = None\narmhole = None, remarks = None, price = None, discount = None, OTP = None\n\n    @allure.story(\"Create a New Order for store  \")\n    @allure.severity(allure.severity_level.NORMAL)\n    @data(*Utils.read_xlsx(\"../TestData/OrderTestData/orderTestCase.xlsx\", \"forStore\"))\n    @unpack\n    def test_create_order_store(self, username, password, productname, leatherProfile, leatherSize,\thardware, lining, polyfill,\n                                size, bodytype, length,\tchest, waist, hips, shoulder, sleeves, arms, weight, front, armhole,\n                                remarks, price, discount, OTP):\n        self.LoginMethod.nativelogin(self.driver, username, password)\n        try:\n            self.assertEqual(\n>               self.Order.createOrder_Store(productname, leatherProfile, leatherSize,\thardware, lining, polyfill,\n                                             size, bodytype, length, chest, waist, hips, shoulder, sleeves, arms, weight, front, armhole,\n                                             remarks, price, discount, OTP),\n                \"Order Succesfully Created\", msg=\"Verification Failed to Create a new user.\")\n\nTestOrder.py:110: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\executions\\OrdersExecutions\\OrderMethods.py:221: in createOrder_Store\n    self.navigateToOrder()\n..\\executions\\OrdersExecutions\\OrderMethods.py:64: in navigateToOrder\n    self.order.clickOnOrderTab()\n..\\Pages\\Order\\OrderPage.py:56: in clickOnOrderTab\n    self.wait.until(EC.element_to_be_clickable(self.OrderTab)).click()\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:86: in until\n    value = method(self._driver)\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:334: in _predicate\n    target = driver.find_element(*target)  # grab element at locator\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000266A82D7AF0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...dInitThunk [0x76B77D49+25]\\\\n\\\\tRtlInitializeExceptionChain [0x77A5B74B+107]\\\\n\\\\tRtlClearBits [0x77A5B6CF+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=112.0.5615.138)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x0095DCE3+50899]\nE       \t(No symbol) [0x008EE111]\nE       \t(No symbol) [0x007F5588]\nE       \t(No symbol) [0x007DD333]\nE       \t(No symbol) [0x0083F4DB]\nE       \t(No symbol) [0x0084DB33]\nE       \t(No symbol) [0x0083B6F6]\nE       \t(No symbol) [0x00817708]\nE       \t(No symbol) [0x0081886D]\nE       \tGetHandleVerifier [0x00BC3EAE+2566302]\nE       \tGetHandleVerifier [0x00BF92B1+2784417]\nE       \tGetHandleVerifier [0x00BF327C+2759788]\nE       \tGetHandleVerifier [0x009F5740+672048]\nE       \t(No symbol) [0x008F8872]\nE       \t(No symbol) [0x008F41C8]\nE       \t(No symbol) [0x008F42AB]\nE       \t(No symbol) [0x008E71B7]\nE       \tBaseThreadInitThunk [0x76B77D49+25]\nE       \tRtlInitializeExceptionChain [0x77A5B74B+107]\nE       \tRtlClearBits [0x77A5B6CF+191]\n\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: NoSuchWindowException","steps":[],"attachments":[{"uid":"e504c93fc5ccc152","name":"log","source":"e504c93fc5ccc152.txt","type":"text/plain","size":1187}],"parameters":[],"hasContent":true,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"story","value":"Create a New Order for store  "},{"name":"feature","value":"Order List"},{"name":"severity","value":"normal"},{"name":"suite","value":"TestOrder"},{"name":"subSuite","value":"TestOrder"},{"name":"host","value":"0day"},{"name":"thread","value":"3296-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestOrder"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"ec7c85d994fab853.json","parameterValues":[]}
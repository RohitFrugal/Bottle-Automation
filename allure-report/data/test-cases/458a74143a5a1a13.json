{"uid":"458a74143a5a1a13","name":"test_dashboard_totalSales","fullName":"TestDashboard.TestDashboard#test_dashboard_totalSales","historyId":"8203a8e060a5321878231b7647c18ec4","time":{"start":1681827780658,"stop":1681827790539,"duration":9881},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"root\"]/section/main/div/div/div[2]/div/div[3]/div/div/div/div[1]/h1\"}\n  (Session info: chrome=112.0.5615.86)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x010DDCE3+50899]\n\t(No symbol) [0x0106E111]\n\t(No symbol) [0x00F75588]\n\t(No symbol) [0x00FA08F9]\n\t(No symbol) [0x00FA0AFB]\n\t(No symbol) [0x00FCF902]\n\t(No symbol) [0x00FBB944]\n\t(No symbol) [0x00FCE01C]\n\t(No symbol) [0x00FBB6F6]\n\t(No symbol) [0x00F97708]\n\t(No symbol) [0x00F9886D]\n\tGetHandleVerifier [0x01343EAE+2566302]\n\tGetHandleVerifier [0x013792B1+2784417]\n\tGetHandleVerifier [0x0137327C+2759788]\n\tGetHandleVerifier [0x01175740+672048]\n\t(No symbol) [0x01078872]\n\t(No symbol) [0x010741C8]\n\t(No symbol) [0x010742AB]\n\t(No symbol) [0x010671B7]\n\tBaseThreadInitThunk [0x76637D49+25]\n\tRtlInitializeExceptionChain [0x77B9B74B+107]\n\tRtlClearBits [0x77B9B6CF+191]","statusTrace":"self = <TestsCases.TestDashboard.TestDashboard testMethod=test_dashboard_totalSales>\n\n    @allure.story(\"Checking Total Sales Tiles\")\n    @allure.severity(allure.severity_level.NORMAL)\n    # @data((\"frugal@latido.com.np\", \"Test@123\"))\n    def test_dashboard_totalSales(self):\n        self.LoginMethod.nativelogin(self.driver, \"frugal@latido.com.np\", \"Test@123\")\n        try:\n>           self.assertEqual(self.Dashboard.verify_total_sales(), \"32\", msg=\"Verification of total sales tile failed.\")\n\nTestDashboard.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Pages\\DashboardPage.py:44: in verify_total_sales\n    total_sales = self.driver.find_element(*self.Total_Sales).text\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000027086164EE0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...dInitThunk [0x76637D49+25]\\\\n\\\\tRtlInitializeExceptionChain [0x77B9B74B+107]\\\\n\\\\tRtlClearBits [0x77B9B6CF+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"root\"]/section/main/div/div/div[2]/div/div[3]/div/div/div/div[1]/h1\"}\nE         (Session info: chrome=112.0.5615.86)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x010DDCE3+50899]\nE       \t(No symbol) [0x0106E111]\nE       \t(No symbol) [0x00F75588]\nE       \t(No symbol) [0x00FA08F9]\nE       \t(No symbol) [0x00FA0AFB]\nE       \t(No symbol) [0x00FCF902]\nE       \t(No symbol) [0x00FBB944]\nE       \t(No symbol) [0x00FCE01C]\nE       \t(No symbol) [0x00FBB6F6]\nE       \t(No symbol) [0x00F97708]\nE       \t(No symbol) [0x00F9886D]\nE       \tGetHandleVerifier [0x01343EAE+2566302]\nE       \tGetHandleVerifier [0x013792B1+2784417]\nE       \tGetHandleVerifier [0x0137327C+2759788]\nE       \tGetHandleVerifier [0x01175740+672048]\nE       \t(No symbol) [0x01078872]\nE       \t(No symbol) [0x010741C8]\nE       \t(No symbol) [0x010742AB]\nE       \t(No symbol) [0x010671B7]\nE       \tBaseThreadInitThunk [0x76637D49+25]\nE       \tRtlInitializeExceptionChain [0x77B9B74B+107]\nE       \tRtlClearBits [0x77B9B6CF+191]\n\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestDashboard","time":{"start":1681827694231,"stop":1681827694231,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"afterStages":[{"name":"_unittest_setUpClass_fixture_TestDashboard::0","time":{"start":1681827803563,"stop":1681827803563,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"severity","value":"normal"},{"name":"story","value":"Checking Total Sales Tiles"},{"name":"feature","value":"Dashboard"},{"name":"suite","value":"TestDashboard"},{"name":"subSuite","value":"TestDashboard"},{"name":"host","value":"0day"},{"name":"thread","value":"16856-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestDashboard"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"458a74143a5a1a13.json","parameterValues":[]}
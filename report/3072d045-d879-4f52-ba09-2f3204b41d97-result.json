{"name": "test_02_create_new_blog_1___frugal_latido_com_np____Test_123____This_is_short_Description____1___test_auto_dateSheet____Automation_Test_Blog____1_2_3____This_is_Header_1_through_Automations_This_is_Header_2_through_Automations_This_is_Header_3_through_Automations____This_is_example_of_Order_list___1_This_is_example_of_Order_list___2____E___POM_for_Bottle__WebApp__TestData__BlogTestData__SampleImage__sampel_leather_1_jpg__", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: 'using' must be a string\n  (Session info: chrome=115.0.5790.171)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x0028A813+48355]\n\t(No symbol) [0x0021C4B1]\n\t(No symbol) [0x00125358]\n\t(No symbol) [0x00150A9F]\n\t(No symbol) [0x00150B3B]\n\t(No symbol) [0x0017E26C]\n\t(No symbol) [0x0016A784]\n\t(No symbol) [0x0017C922]\n\t(No symbol) [0x0016A536]\n\t(No symbol) [0x001482DC]\n\t(No symbol) [0x001493DD]\n\tGetHandleVerifier [0x004EAABD+2539405]\n\tGetHandleVerifier [0x0052A78F+2800735]\n\tGetHandleVerifier [0x0052456C+2775612]\n\tGetHandleVerifier [0x003151E0+616112]\n\t(No symbol) [0x00225F8C]\n\t(No symbol) [0x00222328]\n\t(No symbol) [0x0022240B]\n\t(No symbol) [0x00214FF7]\n\tBaseThreadInitThunk [0x769A7D59+25]\n\tRtlInitializeExceptionChain [0x7783B79B+107]\n\tRtlClearBits [0x7783B71F+191]\n\t(No symbol) [0x00000000]", "trace": "self = <TestsCases.Test_13_Blog.TestBlog testMethod=test_02_create_new_blog_1___frugal_latido_com_np____Test_123____This_is_s...s_example_of_Order_list___2____E___POM_for_Bottle__WebApp__TestData__BlogTestData__SampleImage__sampel_leather_1_jpg__>\nusername = 'frugal@latido.com.np', password = 'Test@123'\nshortDescriptions = 'This is short Description ', blog_type = 1\ntags = 'test_auto_dateSheet', title = 'Automation Test Blog'\nstyle_types = '1,2,3'\ntext_contents = 'This is Header 1 through Automations,This is Header 2 through Automations,This is Header 3 through Automations'\nlist_items = 'This is example of Order list - 1,This is example of Order list - 2'\nimgPath = 'E:\\\\POM_for_Bottle\\\\WebApp\\\\TestData\\\\BlogTestData\\\\SampleImage\\\\sampel_leather_1.jpg'\n\n    @allure.description(\"Create a new Blog\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @data(*Utils.read_xlsx(\"../TestData/BlogTestData/blogTestCase.xlsx\", \"new_blog\"))\n    @unpack\n    def test_02_create_new_blog(self, username, password, shortDescriptions, blog_type, tags, title, style_types, text_contents, list_items, imgPath):\n        self.LoginMethod.nativelogin(username, password)\n        try:\n>           self.assertEqual(self.Blog.create_new_blog(shortDescriptions, blog_type, tags, title, style_types, text_contents, list_items, imgPath), True, msg=\"Verification Failed to Create a new Blog.\")\n\nTest_13_Blog.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\executions\\BlogExecutions\\BlogMethods.py:79: in create_new_blog\n    self.blog.upload_blog_images(1,\n..\\Pages\\Blog\\BlogPage.py:330: in upload_blog_images\n    IMAGE_UPLOAD = self.driver.find_elements(IMAGE_PATH)\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:861: in find_elements\n    return self.execute(Command.FIND_ELEMENTS, {\"using\": by, \"value\": value})[\"value\"] or []\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000023F44719810>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid argument\",\"message\":\"invalid argument: \\'using\\' must be a string...\\tRtlInitializeExceptionChain [0x7783B79B+107]\\\\n\\\\tRtlClearBits [0x7783B71F+191]\\\\n\\\\t(No symbol) [0x00000000]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: 'using' must be a string\nE         (Session info: chrome=115.0.5790.171)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x0028A813+48355]\nE       \t(No symbol) [0x0021C4B1]\nE       \t(No symbol) [0x00125358]\nE       \t(No symbol) [0x00150A9F]\nE       \t(No symbol) [0x00150B3B]\nE       \t(No symbol) [0x0017E26C]\nE       \t(No symbol) [0x0016A784]\nE       \t(No symbol) [0x0017C922]\nE       \t(No symbol) [0x0016A536]\nE       \t(No symbol) [0x001482DC]\nE       \t(No symbol) [0x001493DD]\nE       \tGetHandleVerifier [0x004EAABD+2539405]\nE       \tGetHandleVerifier [0x0052A78F+2800735]\nE       \tGetHandleVerifier [0x0052456C+2775612]\nE       \tGetHandleVerifier [0x003151E0+616112]\nE       \t(No symbol) [0x00225F8C]\nE       \t(No symbol) [0x00222328]\nE       \t(No symbol) [0x0022240B]\nE       \t(No symbol) [0x00214FF7]\nE       \tBaseThreadInitThunk [0x769A7D59+25]\nE       \tRtlInitializeExceptionChain [0x7783B79B+107]\nE       \tRtlClearBits [0x7783B71F+191]\nE       \t(No symbol) [0x00000000]\n\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: InvalidArgumentException"}, "description": "Create a new Blog", "attachments": [{"name": "log", "source": "92ae52c0-3c38-417a-8693-435b4ea69fc0-attachment.txt", "type": "text/plain"}], "start": 1692266539210, "stop": 1692266565953, "uuid": "f4c0a412-3d90-4b43-ac70-f184063d848f", "historyId": "576fbbca61358bf089f0fd4f16085abc", "testCaseId": "945ba442dd725ac3280baa8d9ea1af83", "fullName": "Test_13_Blog.TestBlog#test_02_create_new_blog_1___frugal_latido_com_np____Test_123____This_is_short_Description____1___test_auto_dateSheet____Automation_Test_Blog____1_2_3____This_is_Header_1_through_Automations_This_is_Header_2_through_Automations_This_is_Header_3_through_Automations____This_is_example_of_Order_list___1_This_is_example_of_Order_list___2____E___POM_for_Bottle__WebApp__TestData__BlogTestData__SampleImage__sampel_leather_1_jpg__", "labels": [{"name": "feature", "value": "Blog"}, {"name": "severity", "value": "normal"}, {"name": "suite", "value": "Test_13_Blog"}, {"name": "subSuite", "value": "TestBlog"}, {"name": "host", "value": "0day"}, {"name": "thread", "value": "7692-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_13_Blog"}]}